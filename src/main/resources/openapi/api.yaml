openapi: 3.0.1
info:
  title: weather-station
  description: 'This is an api of a weather station in my flat'
  termsOfService: http://swagger.io/terms/
  contact:
    email: stefan.reschke@outlook.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://petstore.swagger.io/v2
- url: http://petstore.swagger.io/v2
tags:
- name: Weather Data
  description: Weather data you might be interested in
- name: Weather Stations
  description: Managing weather stations
paths:
  /current:
    get:
      tags:
      - Weather Data
      summary: Get current states of all stations
      operationId: getCurrentOfAllStations
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QualitfiedWeatherSnapshot'
  /current/{stationId}:
    get:
      parameters:
      - in: path
        name: stationId
        schema:
          type: integer
        required: true
        description: Numeric ID of the user to get
      tags:
      - Weather Data
      summary: Get current state of a specific station
      operationId: getCurrentOfSingleStation
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnqualifiedWeatherSnapshot'
  /stations:
    get:
      tags:
      - Weather Stations
      summary: Get all stations
      operationId: getAllStations
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherStation'
components:
  schemas:
    WeatherStation:
      type: object
      required:
      - id
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
          format: string
        state:
          type: string
          enum:
          - available
          - unavailable
    UnqualifiedWeatherSnapshot:
      type: object
      required:
      - temperature
      - humidity
      properties:
        temperature:
          type: number
          format: double
        humidity:
          type: number
          format: double
        timestamp:
          type: string
          format: date-time
      xml:
        name: WeatherSnapshot
    QualitfiedWeatherSnapshot:
      allOf:
        - $ref: '#/components/schemas/UnqualifiedWeatherSnapshot'
        - type: object
          required:
            - station
          properties:
            station:
              $ref: '#/components/schemas/WeatherStation'
          xml:
            name: QualitfiedWeatherSnapshot
